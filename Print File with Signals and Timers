/*
Student name: Jaxon Talbert
Student NetID: JRT524
Compiler Used: Text Editor/Ubuntu/Oracle
Program Description: Program 5 takes the image.dat file from Create File and prints each pair and then the letter/number equivalent pausing one second between each pair and its data using signals and timers.
*/


#include <sys/stat.h>
#include <fcntl.h>
#include <sys/types.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <errno.h>
#include <string.h>
#include <dirent.h>
#include <string.h>
#include <time.h>
#include <signal.h>
#include <sys/time.h>

#define BUF_SIZE 1024
char buf[BUF_SIZE];
FILE *file;
size_t nread;
static int timedOut;


//create struct pair
struct Pair
{
	char letter;
	short int number;
	
};

//signal handler for sigalrm
void signalHandler(int sig)
{	
	if (sig == SIGALRM)
	{
		return;
	}
}

int main(int argc, char *argv[])
{
	//create signal and timer structure
	struct sigaction sa;
	struct itimerval itmr;

	//create mask
	sigemptyset(&sa.sa_mask);

	//create handler
	sa.sa_handler = signalHandler;
	sa.sa_flags = 0;

	//set timer interval values
	itmr.it_interval.tv_sec = 0;
	itmr.it_interval.tv_usec = 0;
	itmr.it_value.tv_sec = 1;
	itmr.it_value.tv_usec = 0;
	
	//sigalrm error
	if (sigaction(SIGALRM, &sa, NULL) == -1)
	{
		perror("sigaction");
		exit(EXIT_FAILURE);
	}

	
	int bytes = 0;
	//create instance of pair
	struct Pair pair;
	//open image.dat file
	int file = open("image.dat", O_RDONLY);
	if (file)
	{	
		//read from image.dat file	
		while ((nread = read(file, &pair, sizeof(struct Pair))) > 0)
		{
			printf("(%d,%c) ", pair.number, pair.letter);
			//while int < number from pair print one letter
			for (int i = 0; i < pair.number; i++)
			{
				printf("%c", pair.letter);
			} 
			printf("\n");
			
			//start 1 second timer
			if (setitimer(ITIMER_REAL, &itmr, NULL) == -1)
			{
				perror("setitimer");
				exit(EXIT_FAILURE);
			}
			
			//pause
			pause();
		}
	}
	exit(EXIT_SUCCESS);
}
